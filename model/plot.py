import matplotlib.pyplot as plt

TRAINING_LOG = 'log/training-stats.csv'

# Initialize lists to store data
epochs = []
accuracies = []
avg_losses = []

# Read data from the .txt file which can be copy and pasted from the output generated by nn.c
with open(TRAINING_LOG, 'r') as file:
    next(file) # skip header line
    for line in file:
        parts = line.strip().split(',')
        epoch_part = int(parts[0])  # Get the epoch number
        accuracy_part = float(parts[1]) # Get the accuracy
        loss_part = float(parts[2])  # Get the avg loss

        epochs.append(epoch_part)
        accuracies.append(accuracy_part)
        avg_losses.append(loss_part)

# Create the combined plot
fig, ax1 = plt.subplots(figsize=(10, 6))

# Plot Accuracy
color = 'tab:blue'
ax1.set_xlabel('Epochs')
ax1.set_ylabel('Accuracy (%)', color=color)
ax1.plot(epochs, accuracies, marker='o', label='Accuracy', color=color)
ax1.tick_params(axis='y', labelcolor=color)
ax1.set_ylim(95, 99)


# Create a second y-axis for average loss
ax2 = ax1.twinx()
color = 'tab:orange'
ax2.set_ylabel('Avg Loss', color=color)
ax2.plot(epochs, avg_losses, marker='o', label='Avg Loss', color=color)
ax2.tick_params(axis='y', labelcolor=color)
ax2.set_ylim(0, 0.25)

# Title and grid
plt.title('Training Accuracy and Average Loss')
ax1.grid()

# Show the plot
plt.tight_layout()
plt.savefig('training_plot.png')
plt.show()
